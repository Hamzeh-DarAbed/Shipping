// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Shipping.Context;

#nullable disable

namespace Shipping.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Shipping.Entities.Package", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PackageId"));

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<float>("Length")
                        .HasColumnType("real");

                    b.Property<string>("ShippingServiceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.Property<float>("Width")
                        .HasColumnType("real");

                    b.HasKey("PackageId");

                    b.HasIndex("ShippingServiceId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("Shipping.Entities.ServiceProvider", b =>
                {
                    b.Property<string>("CarrierId")
                        .HasColumnType("text");

                    b.HasKey("CarrierId");

                    b.ToTable("ServiceProviders");
                });

            modelBuilder.Entity("Shipping.Entities.ShippingService", b =>
                {
                    b.Property<string>("ShippingServiceId")
                        .HasColumnType("text");

                    b.Property<string>("CarrierId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ShippingServiceId");

                    b.HasIndex("CarrierId");

                    b.ToTable("CarrierServices");
                });

            modelBuilder.Entity("Shipping.Entities.Package", b =>
                {
                    b.HasOne("Shipping.Entities.ShippingService", "ShippingService")
                        .WithMany("Packages")
                        .HasForeignKey("ShippingServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShippingService");
                });

            modelBuilder.Entity("Shipping.Entities.ShippingService", b =>
                {
                    b.HasOne("Shipping.Entities.ServiceProvider", "ServiceProvider")
                        .WithMany("ShippingService")
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceProvider");
                });

            modelBuilder.Entity("Shipping.Entities.ServiceProvider", b =>
                {
                    b.Navigation("ShippingService");
                });

            modelBuilder.Entity("Shipping.Entities.ShippingService", b =>
                {
                    b.Navigation("Packages");
                });
#pragma warning restore 612, 618
        }
    }
}
